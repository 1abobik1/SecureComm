{
    "swagger": "2.0",
    "info": {
        "description": "API для загрузки, получения и удаления файлов …",
        "title": "File Upload Service API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/token/update": {
            "post": {
                "description": "Берёт refresh‑токен из Cookie и генерирует новые refresh- и access‑токены.\nКлиент должен вызывать этот endpoint при получении HTTP 401 (реализуйте interceptor на клиенте).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Обновление access‑токена",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie header, например: refresh_token=\u003ctoken\u003e",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Новый access_token в теле",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized — отсутствует или невалидный refresh‑токен",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Логин по email и паролю.\nВ зависимости от поля `platform` в запросе возвращаются разные данные:\nДля platform=\"tg-bot\":\naccess_token\nrefresh_token\nk_enc(Base64)\nk_mac(Base64)\n\nДля platform=\"web\":\naccess_token\nks(JSON-объект с полями `k_enc_iv`, `k_enc_data`, `k_mac_iv`, `k_mac_data`)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Email, Password и Platform (web или tg-bot)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogInDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Поля ответа зависят от платформы (см. описание выше)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request или неверный формат platform",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "incorrect password or email",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "Отзывает refresh-токен. Для web берёт токен из cookie, для tg-bot — из JSON body. Для веба не надо передавать refresh_token в json body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Выход (logout)",
                "parameters": [
                    {
                        "description": "{",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlerUsers.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error — некорректный запрос или платформа не поддерживается",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized — отсутствует или невалидный токен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Создаёт нового пользователя. В зависимости от platform возвращает refresh‑токен в cookie (для web) или в теле ответа (для tg-bot).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Email, Password и Platform (web или tg-bot)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignUpDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Для web: {access_token}, refresh в cookie; для tg-bot: {access_token, refresh_token}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error – некорректный запрос или платформа не поддерживается",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "error – пользователь с таким email уже существует",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.LogInDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "platform"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "dto.SignUpDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "platform"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "handlerUsers.LogoutRequest": {
            "type": "object",
            "required": [
                "platform"
            ],
            "properties": {
                "platform": {
                    "type": "string",
                    "enum": [
                        "web",
                        "tg-bot"
                    ]
                },
                "refresh_token": {
                    "description": "для tg-bot",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "description": "\"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}